name: Collect
on:
  # executed at the specified times
  schedule:
    - cron: "21 0 * * *"
    - cron: "22 1 * * *"
    - cron: "23 2 * * *"
    - cron: "24 3 * * *"
    - cron: "25 4 * * *"
    - cron: "26 5 * * *"
    - cron: "27 6 * * *"
    - cron: "28 7 * * *"
    - cron: "29 8 * * *"
    - cron: "30 9 * * *"
    - cron: "21 10 * * *"
    - cron: "22 11 * * *"
    - cron: "23 12 * * *"
    - cron: "23 13 * * *"
    - cron: "24 14 * * *"
    - cron: "25 15 * * *"
    - cron: "23 16 * * *"
    - cron: "25 17 * * *"
    - cron: "27 18 * * *"
    - cron: "28 19 * * *"
    - cron: "33 20 * * *"
    - cron: "22 21 * * *"
    - cron: "34 22 * * *"
    - cron: "30 23 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

env:
  # time zone
  TZ: Asia/Shanghai

  # github access token
  GIST_PAT: ${{ secrets.GIST_PAT }}

  # github username and gist id, separated by '/'
  GIST_LINK: ${{ secrets.GIST_LINK }}

  # the url to the list of airports that you maintain yourself
  # each line include domain, coupon and invitation code, the domain must be included, and the latter two items are optional
  CUSTOMIZE_LINK: ${{ secrets.CUSTOMIZE_LINK }}

  # include special protocols, such as vless hysteria2 and hysteria
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install
        run: pip3 install -r requirements.txt

      - name: Check
        run: |
          if [ -z "$GIST_PAT" ]; then
              echo "Error: environment 'GIST_PAT' cannot be empty"
              exit 1
          fi

          if [ -z "$GIST_LINK" ]; then
              echo "Error: environment 'GIST_LINK' cannot be empty"
              exit 1
          fi

          LINK_PARTS=$(echo "$GIST_LINK" | awk -F'/' 'NF==2 && $1!="" && $2!=""')
          if [ -z "$LINK_PARTS" ]; then
              echo "Error: environment 'GIST_LINK' is not valid, should be 'username/gist_id' format"
              exit 1
          fi

      - name: Collect
        run: python -u subscribe/collect.py --all --overwrite --skip

      - name: Timestamp
        run: date
